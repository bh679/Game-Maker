<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>531</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_fullscreen</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sprite0
width = 5
height = 5

blocks = width * height
blockWidth = room_width/width
blockHeight = room_height/height
for(i = 0; i &lt;  blocks; i += 1)
 block[i] = false
 
current = floor(random(blocks))
scale = 3/4
justdown = false

placed = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>-1</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_released(mb_left)
{
    i = 0
    for(x = 0; x &lt; room_width; x += room_width/width)
    {
        for(y = 0; y &lt; room_height; y += room_height/height)
        {
            if mouseInBox(x,y,x+room_width/width,y+room_height/height) and current = i and placed &lt; blocks
            {
                block[i] = true
                justdown = true
                sound_play(snd_placed)
                placed += 1
            }
            
            i  += 1
        }
    }
    if justdown = false
        sound_play(snd_wrong)
}
if justdown = true
{
    x = floor(current/height)*blockWidth 
    y = current mod width*blockHeight
    if placed = blocks
    {
        sound_play(snd_win)
        placed += 1
    }
    else if !mouseInBox(x,y,x+room_width/width,y+room_height/height) and placed &lt; blocks
    {
        justdown = false
        while(block[current] = true)
        {
            current = floor(random(blocks))
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_sprite_ext(sprite1,0,0,0,1.5,1.5,0,noone,1)

i = 0
for(x = 0; x &lt; room_width; x += blockWidth)
{
    for(y = 0; y &lt; room_height; y += blockHeight)
    {
        if block[i]
            draw_sprite_part_ext(sprite_index,image_index,x/scale,y/scale,(room_width/width)/scale,(room_height/height)/scale,x,y,scale,scale,noone,1);
        
        //if i = current
          //  draw_text(x,y,string(i))
        
        i += 1
    }
}

x = floor(current/height)*blockWidth 
y = current mod width*blockHeight
draw_sprite_part_ext(sprite_index,image_index,x/scale,y/scale,(blockWidth)/scale,(blockHeight)/scale,
                    floor(mouse_x/blockWidth)*blockWidth, floor(mouse_y/blockHeight)*blockHeight,scale,scale,noone,1);
//draw_text(mouse_x,mouse_y,string(current))

draw_set_color(c_black)
for(x = 0; x &lt; room_width; x += room_width/width)
{
    draw_line(x,0,x,room_height)
}

for(y = 0; y &lt; room_height; y += room_height/height)
{
    draw_line(0,y,room_width,y)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
