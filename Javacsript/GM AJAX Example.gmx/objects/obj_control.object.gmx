<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize 'waiting' variable

/* Since we don't want to check for AJAX replies every step - We create a variable indicating
whether or not we are currently waiting for a reply. 

Note: If you intend to send multiple concurrent AJAX requests, this method quickly becomes 
inefficient - as a 'waiting' variable is required for each request we might be waiting on. 

One alternative is to place each unreplied request id on a DS_List, then loop through the list 
to check for replies to each request. */

ajaxWaiting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for AJAX replies

//If we are waiting for a reply
if(ajaxWaiting) 
{
    //We check to see if a reply has arrived.
    if (ajax_check_reply(requestID) == true) 
    {
        //If so, we can read and store the reply.
        display = ajax_read_reply(requestID); 
        //The request is finished, and we're no longer waiting for a reply.
        ajaxWaiting = false; 
        //No open requests, so it's safe to clear all requests, freeing memory.
        ajax_clear_requests();
    }
    
    //We also have to check if the request has failed.
    if (ajax_check_failed(requestID) == true)
    {
        //The request has failed.
        display = "##AJAX Request Failed";
        //So we're no longer waiting for a reply.
        ajaxWaiting = false;
        //No open requests, so it's safe to clear all requests, freeing memory.
        ajax_clear_requests();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send an AJAX 'POST' Request

//If we're not already waiting for an AJAX reply.
if (ajaxWaiting == false)
{
    //We create a new request, and store the ID in a variable.
    requestID = ajax_request_new();
    
    //We prepare some POST data to send.
    postData = "browser="+string(os_browser)+"&amp;os="+string(os_type)
    
    //We then send the new request.
    ajax_request_send(requestID,"POST","http://gmga.me/GM_AJAX/ajaxReply.php",postData);
    
    //We are now waiting for a reply, which will be checked for each step.
    ajaxWaiting = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send an AJAX 'GET' Request

//If we're not already waiting for an AJAX reply.
if (ajaxWaiting == false)
{
    //We create a new request, and store the ID in a variable.
    requestID = ajax_request_new();
    
    //We then send the new request.
    ajax_request_send(requestID,"GET","http://gmga.me/GM_AJAX/ajaxReply.php","");
    
    //We are now waiting for a reply, which will be checked for each step.
    ajaxWaiting = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
