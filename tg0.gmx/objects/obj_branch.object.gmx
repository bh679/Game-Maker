<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_branch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>colourMerge = 0.004//0.008
root = 0
trunk = true
colour = c_white//c_black
age = 1
width = min(1,(age/10)*2)
length = min(1,age/10)
//maxwidth = width
//maxlength = length
stopage = age
growths = 0
angle = 90
limit = 100
xaim = 0
yaim = 0
done = false
i = 0
repeat(MAXGROWTHS)
{
    growth[i] = 0
    i += 1
}

branchno = global.breaches
global.breaches += 1

leaves = 0
i = 0
repeat(5)
{
    leaflen[i] = 0
    leafage[i] = 0
    leafangle[i] = 0
    i += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale width height</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = width
image_yscale = length
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//grow branch
    width = (((age/30)^2)/5)
    length = sqrt((sqrt(max(age - (obj_ctrl.tree).age/1000,0))))*2
    stopage = age

//time for new branch
if age &gt; 100 and (age &lt; 300 or ((obj_ctrl.tree).age mod 100 &gt; 0 and (obj_ctrl.tree).age mod 100 &lt;= 10))
{   
    //find the position of the end of the branch 
    xaim = x+lengthdir_x(sprite_height,angle)
    yaim = y+lengthdir_y(sprite_height,angle)
    
    //if it hasnt expanded to a new branch
    if growths = 0
    {
        //how many brnaches it will have (1 pretty much means it just keeps growing)
        growths = max(1,random(6)-4)
            
        //create the branches
        i = 0
        repeat(growths)
        {
            growth[i] = instance_create(xaim,yaim,obj_branch)
            
            //truck of the tree
            if i = 1
            {
                growth[i].trunk = true
                
                if angle &lt; 90
                    growth[i].angle = angle+random(90)-30
                else
                    growth[i].angle = angle+random(90)-60
            }
            //just normal branch
            else
            {
                growth[i].angle = angle+random(90)-45
                growth[i].trunk = false
            }
                
            growth[i].root = instance_id
            growth[i].colour = merge_color(colour,c_white,colourMerge)
            i += 1
        }
    }
    //random new branch 
    else if random(300) &gt; 297 and growths = 1
    {
        growths += 1
        growth[1] = instance_create(xaim,yaim,obj_branch)
        growth[1].angle = angle+random(90)-45
        growth[1].root = instance_id
        growth[1].colour = merge_color(colour,c_white,0.008)
        growth[1].trunk = false
    }
    //move new branch inline with growth
    else
    {
        i = 0
        repeat(growths)
        {
            growth[i].x = xaim
            growth[i].y = yaim
            
            i += 1
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>predraw stuff</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> //draw_set_alpha(1)
if x &lt; room_width + (obj_ctrl.tree).sprite_height/2
{
    if x &gt; -10
    {
        drawx = x
        drawxaim = xaim
    }
    else
    {
        drawx = x+(room_width+(obj_ctrl.tree).sprite_height) 
        drawxaim = xaim+(room_width+(obj_ctrl.tree).sprite_height) 
    }
}
else
{
    drawx = x-(room_width+(obj_ctrl.tree).sprite_height)
    drawxaim = xaim-(room_width+(obj_ctrl.tree).sprite_height)
}

if y &lt; room_height + (obj_ctrl.tree).sprite_height/2
{
    if y &gt; -10
    {
        drawy = y
        drawyaim = yaim
    }
    else
    {
        drawy = y+(room_height+(obj_ctrl.tree).sprite_height) 
        drawyaim = yaim+(room_height+(obj_ctrl.tree).sprite_height) 
    }
}
else
{
    drawy = y-(room_height+(obj_ctrl.tree).sprite_height)
    drawyaim = yaim-(room_height+(obj_ctrl.tree).sprite_height)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    

//if branchno mod 2 and 1= 2
{
    //draw_sprite_ext(spr_branch,0,drawx,drawy,width,length,angle-90,colour,1)
    draw_set_color(colour)
    //draw_circle_color(drawxaim,drawyaim,sprite_width/2,noone,noone,false)
    draw_circle_color(drawxaim,drawyaim,sprite_width/3*2,noone,noone,false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
