<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouseLast_x = mouse_x
mouseLast_y = mouse_y
moveSpeed = 1

MAXPEOPLE = 10

global.debuggin = false

selected = instance_nearest(x,y,obj_person)
view_enabled = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left)
{
    mouseLast_x = mouse_x
    mouseLast_y = mouse_y
}

if mouse_check_button(mb_left)
{
    if point_distance(mouse_x,0,mouseLast_x,0) &gt; 0
        view_xview[0] += (mouseLast_x - mouse_x)*moveSpeed
    if point_distance(mouse_y,0,mouseLast_y,0) &gt; 0
        view_yview[0] += (mouseLast_y - mouse_y)*moveSpeed
}

if keyboard_check(vk_left)
    view_xview[0] -= 20
if keyboard_check(vk_right)
    view_xview[0] += 20
if keyboard_check(vk_up)
    view_yview[0] -= 20
if keyboard_check(vk_down)
    view_yview[0] += 20

if keyboard_check_pressed(vk_enter)
{
    view_enabled = (1 + view_enabled) mod 2
    //view_current = view_enabled
}
    
if keyboard_check(vk_f12)
    game_restart()
    
if keyboard_check_pressed(vk_space)
    global.debuggin = !global.debuggin
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_person) &lt; MAXPEOPLE
{
    x = random(room_width)
    y = random(room_height)
    while(!position_empty(x,y) or insideView())
    {
        x = random(room_width)
        y = random(room_height)
    }
    instance_create(x,y,obj_person)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()

x = random(room_width)
y =random(room_height)

repeat(50)
{
    while(!position_empty(x,y))
    {
        x = random(room_width)
        y = random(room_height)
    }
    instance_create(x,y,obj_person)
}

repeat(150)
{
    while(!position_empty(x,y))
    {
        x = random(room_width)
        y =random(room_height)
    }
    instance_create(x,y,obj_tree)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
