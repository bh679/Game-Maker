<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start()

i = 0

rx = 0
ry = 0
rz = 0

xscale = 1
yscale = 1
zscale = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xscale = sin(i/400)
yscale += sin(i/40)/10
zscale = cos(i/100)

i += 1


d3d_set_projection(200,200,200,1,1,1,0,0,1)

draw_set_color(c_white)

d3d_transform_set_identity();
d3d_transform_add_rotation_x(rx);
rx += abs(sin(i/30));
d3d_transform_add_rotation_y(ry);
ry = sin(i/60)*360;
d3d_transform_add_rotation_z(rz);
rz += abs(sin(i/130));

d3d_transform_set_scaling(xscale,yscale,zscale)
d3d_transform_add_translation(0,0,0);
d3d_draw_ellipsoid(-100,-100,-100,100,100,100,sprite_get_texture(spr_1,0),1,1,100)
d3d_transform_set_identity();

d3d_transform_set_identity();
if i mod 10000 &lt; 4000
    d3d_transform_add_rotation_z(rz);
else if i mod 10000 &lt; 8000
    d3d_transform_add_rotation_y(rz);
else
    d3d_transform_add_rotation_x(rz);
d3d_transform_add_translation(0,0,0);
d3d_draw_ellipsoid(-1000,-1000,-1000,1000,1000,1000,sprite_get_texture(spr_1,0),2,2,100)
d3d_transform_set_identity();

draw_set_color(c_black)
if i mod 750 &lt; 360
    d3d_transform_add_rotation_z(i/10);
else
{
    d3d_transform_add_rotation_x(rz);
    d3d_transform_add_rotation_y(i/400);
}
d3d_transform_add_translation(10,10,110);
draw_text(0,0,string(makeString(i)))

d3d_transform_set_identity();

draw_text(100,10,string(ry))


//d3d_light_define_point(1,0,sin(i)*room_height*2,cos(i)*room_height*2,10000,c_white)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
