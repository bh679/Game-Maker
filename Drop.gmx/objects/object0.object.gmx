<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = room_height /3
centerx = room_width/2
centery = room_height/2
_gravity = 9.8 *2

balls = 1
ballSize = 10
ballMass = 0.01
MAXballs = 50
for(i = 0; i &lt; MAXballs; i+=1)
{
    ballx[i] = centerx + i * ballSize
    bally[i] = centery + i * ballSize
    ballSpeed[i] = 5
    ballDirection[i] = 0
}

//debuggin
tangent = 0
difference = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; balls; i += 1)
{
    
    //modulise speed
    if ballDirection[i] mod 360 &lt; 0
       ballDirection[i] = ballDirection[i] mod 360 + 360

    ///break down speed
    _hspeed = lengthdir_x(ballSpeed[i],ballDirection[i])
    _vspeed = lengthdir_y(ballSpeed[i],ballDirection[i])
    
    //appy gravity
    _vspeed += _gravity * ballSize * ballMass
    
    //apply other forces
    if mouse_check_button_pressed(mb_left)
    {
        directionToMouse = point_direction(ballx[i],bally[i],mouse_x,mouse_y)
        distanceToMouse = point_distance(ballx[i],bally[i],mouse_x,mouse_y)
        _hspeed += lengthdir_x(distanceToMouse/100,directionToMouse)
        _vspeed += lengthdir_y(distanceToMouse/100,directionToMouse)
    }
    //apply speed
    ballx[i] += _hspeed
    bally[i] += _vspeed
    
       
    
    
    centerDistance = point_distance(ballx[i],bally[i],centerx,centery)
    
    ballDirection[i] = point_direction(0,0,_hspeed,_vspeed)
    
    
    if (centerDistance &gt; radius)
    {
        tangent = point_direction(centerx,centery,ballx[i],bally[i]) + 90
        Collision(i,tangent)
        counter = 0
        while (centerDistance &gt; radius and counter &lt; 6)
        {
            //apply speed
            ballx[ball] += _hspeed
            bally[ball] += _vspeed
            centerDistance = point_distance(ballx[i],bally[i],centerx,centery)
            counter += 1
        }
        
    }
    
    /*for(_other = 0; _other &lt; balls; _other+= 1)
    {
        centerDistance = point_distance(ballx[_other],bally[_other],ballx[i],bally[i])
        if (centerDistance &lt; ballSize and _other != i)
        {
            tangent = point_direction(ballx[_other],bally[_other],ballx[i],bally[i]) + 90
            Collision(i,tangent)
            tangent = point_direction(ballx[i],bally[i],ballx[_other],bally[_other]) + 90
            Collision(_other,tangent)
            centerDistance = point_distance(ballx[i],bally[i],centerx,centery)
        }
    }*/
    
    //apply speed
    ballx[i] += _hspeed * 2
    bally[i] += _vspeed * 2
    
    
    ballSpeed[i] = point_distance(0,0,_hspeed,_vspeed)
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Background</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)
draw_rectangle(0,0,room_width,room_height,false)

draw_circle_color(centerx, centery,radius,c_white,merge_color(c_white,c_black,0.2),false)
draw_set_color(c_white)
draw_circle(centerx, centery,radius*1.05,true)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Balls</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_red)
for(i = 0; i &lt; balls; i += 1)
{
    color = make_color(sin(i*360/balls)*255/2+255/2,sin(i*360/balls)*255/2+255/2,sin(i*360/balls)*255/2+255/2)
    if i = 1
       color = c_red
    draw_circle_color(ballx[i],bally[i],ballSize,color,color,false)
    //draw_text(ballx[i],bally[i]+ballSize+10,string(ballDirection[i]))
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debuggin</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_blue)


x = centerx + lengthdir_x(radius,tangent-90)
y = centery + lengthdir_y(radius,tangent-90)
draw_line(x - lengthdir_x(radius,tangent),y - lengthdir_y(radius,tangent),x + lengthdir_x(radius,tangent),y + lengthdir_y(radius,tangent))

x = centerx + lengthdir_x(-radius,tangent-90)
y = centery + lengthdir_y(-radius,tangent-90)
draw_line(x - lengthdir_x(radius,tangent),y - lengthdir_y(radius,tangent),x + lengthdir_x(radius,tangent),y + lengthdir_y(radius,tangent))

/*draw_set_color(c_green)
tangent = point_direction(centerx,centery,mouse_x,mouse_y) + 90
mouse_direction = point_direction(centerx,centery,mouse_x,mouse_y)
x = centerx + lengthdir_x(radius,mouse_direction)
y = centery + lengthdir_y(radius,mouse_direction)
draw_line(x - lengthdir_x(radius,tangent),y - lengthdir_y(radius,tangent),x + lengthdir_x(radius,tangent),y + lengthdir_y(radius,tangent))

x = centerx + lengthdir_x(-radius,mouse_direction)
y = centery + lengthdir_y(-radius,mouse_direction)
draw_line(x - lengthdir_x(radius,tangent),y - lengthdir_y(radius,tangent),x + lengthdir_x(radius,tangent),y + lengthdir_y(radius,tangent))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="123">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>balls = balls mod MAXballs + 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
