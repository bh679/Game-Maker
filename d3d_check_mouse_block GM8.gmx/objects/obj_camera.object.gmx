<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Start up camera
d3d_start()
d3d_set_hidden(1)
d3d_set_culling(0)
d3d_set_lighting(1)
d3d_set_shading(1)
d3d_set_fog(0,c_dkgray,0,300)
d3d_light_enable(0,1)

camangle=45
camanglez=25
camzoom=100

// Variables for view dragging
drag=0
prevx=mouse_x
prevy=mouse_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Zoom with mouse wheel.
if (mouse_wheel_up() &amp;&amp; camzoom&gt;10) camzoom/=1.2
if (mouse_wheel_down() &amp;&amp; camzoom&lt;1000) camzoom*=1.2

// Drag view with left mouse button.
if (drag=1) {
    if (mouse_check_button(mb_left)) {
        camangle-=(mouse_x-prevx)/view_wview*400
        camanglez+=(mouse_y-prevy)/view_hview*300
        camanglez=median(89.999,-89.999,camanglez)
    } else {
        drag=0
    }
} else if (mouse_check_button_pressed(mb_left)) drag=1

prevx=mouse_x
prevy=mouse_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var side,text,xfrom,yfrom,zfrom;

// Set the position of the camera.
xfrom=cos(degtorad(camanglez))*lengthdir_x(camzoom,camangle+180)
yfrom=cos(degtorad(camanglez))*lengthdir_y(camzoom,camangle+180)
zfrom=sin(degtorad(camanglez))*camzoom

// Set light and projection, with a FOV of 60.
draw_set_color(c_white)
draw_set_alpha(1)
d3d_set_projection_ext(xfrom,yfrom,zfrom,0,0,0,0,0,1,60,view_wview/view_hview,1,32000)
d3d_light_define_point(0,xfrom,yfrom,zfrom,2000,c_white)

// Prepare the block checking script, notice how we use the same arguments
// as in the projection function, with the exception of the last three.
d3d_check_mouse_block_prepare(xfrom,yfrom,zfrom,0,0,0,0,0,1,60,0)

// Draw a block, check the cursor and store the result into a variable.
d3d_draw_block(-8,-8,-8,8,8,8,-1,1,1)
side=d3d_check_mouse_block(-8,-8,-8,8,8,8)

// Highlight the selected side.
d3d_set_lighting(0)
draw_set_color(c_red)
text=""
if (side=1) {text="East (X)" d3d_draw_wall(8.01,-8.01,-8.01,8.01,8.01,8.01,-1,1,1)}
else if (side=2) {text="West (-X)" d3d_draw_wall(-8.01,-8.01,-8.01,-8.01,8.01,8.01,-1,1,1)}
else if (side=3) {text="South (Y)" d3d_draw_wall(-8.01,8.01,-8.01,8.01,8.01,8.01,-1,1,1)}
else if (side=4) {text="North (-Y)" d3d_draw_wall(-8.01,-8.01,-8.01,8.01,-8,8.01,-1,1,1)}
else if (side=5) {text="Above (Z)" d3d_draw_floor(-8.01,-8.01,8.01,8.01,8,8.01,-1,1,1)}
else if (side=6) {text="Below (-Z)" d3d_draw_floor(-8.01,-8.01,-8.01,8.01,8.01,-8.01,-1,1,1)}

// Draw some text.
d3d_set_projection_ortho(0,0,view_wview,view_hview,0)
d3d_set_hidden(0)
draw_set_color(c_black)
if (text!="") draw_text(2,2,"Touching side: "+text)
d3d_set_hidden(1)
d3d_set_lighting(1)

// Show FPS.
room_caption="FPS: "+string(fps)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
