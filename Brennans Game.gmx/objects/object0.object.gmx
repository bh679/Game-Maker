<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>colTopLeft = c_white
colTopRight = c_white
colBotLeft = c_white
colBotRight = c_white

xlast = x
ylast = y
colorSpeed = 1/10000

for(i = 0; i &lt; 4; i+=1)
{
    red[i] = 0
    green[i] = 0
    blue[i] = 0
    color[i] = c_white
}

MAXBALLS = 200
MAXBALLSIZE = 50
ballSpeed = 100
for(i = 0; i &lt; MAXBALLS; i += 1)
{
    ballx[i] = 0
    bally[i] = 0
    ballsize[i] = 0
}

time = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left)
{
    for(i = 0; i &lt; MAXBALLS; i += 1)
    {
        if ballsize[i] = 0 and red[i mod 4] mod 2 and blue[i mod 4] mod 2 and green[i mod 4] mod 2
        {
            ballsize[i] = (mouse_x*MAXBALLS/(i+1) + mouse_y*(i+1)/MAXBALLS) mod MAXBALLSIZE
            ballx[i] = mouse_x + (i)-MAXBALLS * boolToNeg(mouse_y)
            bally[i] = mouse_y + MAXBALLS-(i) * boolToNeg(mouse_x)
        }
    }

    changeColour(colorSpeed*10)
}
if mouse_check_button(mb_left)
{
    ballmade = false
    for(i = 0; i &lt; MAXBALLS; i += 1)
    {
        if ballsize[i] = 0 and red[i mod 4] mod 2 and blue[i mod 4] mod 2 and green[i mod 4] mod 2 and ballmade = false
        {
            if ballx[i] mod 3 = 0 ballmade = true
            ballsize[i] = (mouse_x*MAXBALLS/(i+1) + mouse_y*(i+1)/MAXBALLS) mod MAXBALLSIZE
            ballx[i] = mouse_x + ((i)- MAXBALLS/2) mod 100 * boolToNeg(mouse_y)
            bally[i] = mouse_y + (MAXBALLS/2-(i)) mod 100 * boolToNeg(mouse_x)
        }
    }
    changeColour(colorSpeed)
}


for(i = 0; i &lt; MAXBALLS; i += 1)
{
    if ballsize[i] &gt; 0
    {
        
           
        ballsize[i] = max(ballsize[i]-1,0)
        if ballx[i]-mouse_x != 0
           ballx[i] += ballSpeed/(ballx[i]-mouse_x) + sin(time/30+i*3.6)*10
        if (bally[i]-mouse_y) != 0
           bally[i] += ballSpeed/(bally[i]-mouse_y) + cos(time/30+i*3.6)*10
           
        bally[i] = bally[i] mod room_height
        ballx[i] = ballx[i] mod room_width
    }
}
colTopLeft = color[0]
colTopRight = color[1]
colBotLeft = color[2]
colBotRight = color[3]

xlast = x
ylast = y

time += 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle_color(0,0,room_width,room_height,colTopLeft,colTopRight,colBotLeft,colBotRight,false);

for(i = 0; i &lt; MAXBALLS; i += 1)
{
    if ballsize[i] &gt; 0
    {
        col1 = make_color(sin(red[(i) mod 4])*255/2+255/2,cos(green[(i) mod 4])*255/2+255/2,sin(blue[(i) mod 4])*255/2+255/2)//make_color(sin(red[(i + bally[i]) mod 4])*255/2+255/2,cos(green[(i - ballsize[i]) mod 4])*255/2+255/2,sin(blue[(i - ballx[i]) mod 4])*255/2+255/2)
        col2 = make_color(cos(red[(i) mod 4])*255/2+255/2,sin(green[(i) mod 4])*255/2+255/2,cos(blue[(i) mod 4])*255/2+255/2)//make_color(cos(red[(i + ballsize[i]) mod 4])*255/2+255/2,sin(green[(i + ballx[i]) mod 4])*255/2+255/2,cos(blue[(i - bally[i]) mod 4])*255/2+255/2)
        col = merge_color(col1,col1,i/MAXBALLS)
        
        draw_ellipse_color(ballx[i] + ballsize[i]/2, bally[i] + ballsize[i]/2, ballx[i] - ballsize[i]/2, bally[i] - ballsize[i]/2,col,col,false)
    }
    
}
/*draw_set_color(c_black)
for(i = 0; i &lt; 4; i += 1)
{
 draw_text(0, i*10, string(i) + " : " + string(red[i]) + " " + string(green[i]) + " " + string(blue[i]))
}

draw_set_color(c_white)
for(i = 0; i &lt; 4; i += 1)
{
 draw_text(0, 40+i*10, string(i) + " : " + string(red[i]) + " " + string(green[i]) + " " + string(blue[i]))
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
